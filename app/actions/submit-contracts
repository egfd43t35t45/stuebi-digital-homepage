'use server'

import { z } from 'zod'

const ContactFormSchema = z.object({
  name: z.string().min(1, 'Name is required'),
  email: z.string().email('Invalid email address'),
  phone: z.string().min(10, 'Phone number must be at least 10 digits'),
  message: z.string().min(10, 'Message must be at least 10 characters long'),
})

export async function submitContact(formData: FormData) {
  const validatedFields = ContactFormSchema.safeParse({
    name: formData.get('name'),
    email: formData.get('email'),
    phone: formData.get('phone'),
    message: formData.get('message'),
  })

  if (!validatedFields.success) {
    return { success: false, errors: validatedFields.error.flatten().fieldErrors }
  }

  // Here you would typically send this data to your backend or API
  // For demonstration, we'll just log it and return a success message
  console.log('Form submission:', validatedFields.data)

  // Simulate API delay
  await new Promise((resolve) => setTimeout(resolve, 1000))

  return { success: true, message: 'Thank you for your message. We will get back to you soon!' }
}

